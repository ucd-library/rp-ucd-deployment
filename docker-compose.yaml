version: '3'
services:

  zookeeper:
    image: zookeeper:3.6
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog

  fuseki:
    image: gcr.io/ucdlib-pubreg/rp-ucd-fuseki:1.4.0
    env_file:
      - .env
    volumes:
      - fuseki-data:/fuseki
    ports: # still exposed for admin access
      - ${FUSEKI_HOST_PORT:-8081}:3030

  kafka:
    image: bitnami/kafka:2.5.0
    env_file:
      - .env
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CLIENT_USER=admin
    volumes:
      - kafka-data:/bitnami/kafka
    depends_on:
      - "zookeeper"

  kafka-init:
    image: gcr.io/ucdlib-pubreg/rp-kafka-init:jm-gcs
    env_file:
      - .env
    depends_on:
      - "zookeeper"

  redis:
    image: redis:6.0.5
    volumes:
      - redis-data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data

  client:
    image: gcr.io/ucdlib-pubreg/rp-ucd-client:sandbox
    env_file:
      - .env
    restart: on-failure

  gateway:
    image: gcr.io/ucdlib-pubreg/rp-ucd-node-services:jm-gcs:jm-gcs
    env_file:
      - .env
    ports:
      - ${HOST_PORT:-8080}:3000
    restart: on-failure
    command: npm run gateway

  auth:
    image: gcr.io/ucdlib-pubreg/rp-ucd-node-services:jm-gcs
    env_file:
      - .env
    environment:
      - CAS_URL=${CAS_URL:-https://ssodev.ucdavis.edu/cas}
    restart: on-failure
    command: npm run auth-cas

  api:
    image: gcr.io/ucdlib-pubreg/rp-ucd-node-services:jm-gcs
    env_file:
      - .env
    restart: on-failure
    command: npm run api

  indexer:
    image: gcr.io/ucdlib-pubreg/rp-ucd-node-services:jm-gcs
    env_file:
      - .env
    ports:
      - ${INDEXER_HOST_PORT:-8082}:3000
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/service-account.json
    volumes:
      - ./service-account.json:/etc/service-account.json
    restart: on-failure
    command: npm run es-indexer

  gcs:
    image: gcr.io/ucdlib-pubreg/rp-ucd-node-services:jm-gcs
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/service-account.json
    volumes:
      - ./service-account.json:/etc/service-account.json
    restart: on-failure
    command: npm run gcs

  status:
    image: gcr.io/ucdlib-pubreg/rp-ucd-node-services:jm-gcs
    env_file:
      - .env
    restart: on-failure
    command: npm run status

  models:
    image: gcr.io/ucdlib-pubreg/rp-ucd-node-services:jm-gcs
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/service-account.json
    ports:
      - ${MODELS_HOST_PORT:-8084}:3000
    volumes:
      - ./service-account.json:/etc/service-account.json
    restart: on-failure
    command: npm run es-models

volumes:
  es-data:
  fuseki-data:
  kafka-data:
  zookeeper-data:
  zookeeper-datalog:
  redis-data:
